import os
import numpy as np

# FADH Protons and Nitrogens, HFI Tensors given in MHz (From 240 MHz Paper), given in descending order of sum of squares

# N5 = Nucleus('N5', 1, np.array([[-2.79, -0.08, 0], [-0.08, -2.45, 0], [0, 0, 49.24]]) * 1e6)
# N10 = Nucleus('N10', 1, np.array([[-0.42, -0.06, 0.00], [-0.06, -0.66, 0.00], [0.00, 0.00, 16.94]]) * 1e6)
# H8_1 = Nucleus('H8_1', 1 / 2, np.array([[12.33, 0.00, 0.00], [0.00, 12.33, 0.00], [0.00, 0.00, 12.33]]) * 1e6)
# H8_2 = Nucleus('H8_2', 1 / 2, np.array([[12.33, 0.00, 0.00], [0.00, 12.33, 0.00], [0.00, 0.00, 12.33]]) * 1e6)
# H8_3 = Nucleus('H8_3', 1 / 2, np.array([[12.33, 0.00, 0.00], [0.00, 12.33, 0.00], [0.00, 0.00, 12.33]]) * 1e6)
# H1_prime = Nucleus('H1_prime', 1/2, np.array([[11.41, 0.00, 0.00], [0.00, 11.41, 0.00], [0.00, 0.00, 11.41]])*1e6)
# H1_doubleprime = Nucleus('H1_doubleprime', 1/2, np.array([[11.41, 0.00, 0.00], [0.00, 11.41, 0.00], [0.00, 0.00, 11.41]])*1e6)
# H6 = Nucleus('H6', 1/2, np.array([[-5.63, 0.92, 0.00], [0.92, -14.77, 0.00], [0.00, 0.00, -12.15]])*1e6)
# H7_1 = Nucleus('H7_1', 1/2, np.array([[-3.97, 0.00, 0.00], [0.00, -3.97, 0.00], [0.00, 0.00, -3.97]])*1e6)
# H7_2 = Nucleus('H7_2', 1/2, np.array([[-3.97, 0.00, 0.00], [0.00, -3.97, 0.00], [0.00, 0.00, -3.97]])*1e6)
# H7_3 = Nucleus('H7_3', 1/2, np.array([[-3.97, 0.00, 0.00], [0.00, -3.97, 0.00], [0.00, 0.00, -3.97]])*1e6)
# H9 = Nucleus('H9', 1/2, np.array([[1.88, -0.71, 0.00], [-0.71, 3.01, 0.00], [0.00, 0.00, -0.14]])*1e6)
# N3 = Nucleus('N3', 1, np.array([[-1.21, 0.00, 0.00], [0.00, -0.92, 0.00], [0.00, 0.00, -1.09]])*1e6)
# H3 = Nucleus('H3', 1/2, np.array([[-0.84, -0.07, 0.00], [-0.07, 1.06, 0.00], [0.00,0.00,-1.81]])*1e6)
# N1 = Nucleus('N1', 1, np.array([[-0.72, 0.08, 0.00], [0.08, -0.64, 0.00], [0.00, 0.00, 1.07]])*1e6)


# FADH C13 Nuclei, ordered in descending order of sum of squares, using the MHz tensors


FAD_carbon_tensors = np.load("C7M_anisotropic_MHz.npy")
print(FAD_carbon_tensors)


# C8 = Nucleus('C8', 1/2, np.array([[1.10324799, -0.34094734, 0.00], [-0.34094734, 1.55501846, 0.00], [0.00, 0.00, 46.49118]])*1e6) )
# C5A = Nucleus('C5A', 1/2, np.array([[-16.39801673, -1.7214494, 0.00], [-1.7214494, -13.97962665, 0.00], [0.00, 0.00, -34.8079]])*1e6)
# C6 = Nucleus('C6', 1/2, np.array(([0.570117858, 0.0107777895, 0], [0.0107777895, 0.703398326, 0], [0, 0, 38.0512000]])
# C4A = Nucleus('C4A', 1/2, np.array([[-16.80154633, 1.29779775, 0.00], [1.29779775, -15.64680962, 0.00], [0.00, 0.00, 18.27357]])*1e6)
# C7 = Nucleus('C7', 1/2, np.array([[-9.1508731, -0.46094791, 0.00], [-0.46094791, -9.363066042, 0.00], [0.00, 0.00, -22.43097]])*1e6)
# C9A = Nucleus('C9A', 1/2, np.array([[-1.99205207, -0.20734695, 0.00], [-0.20734695, -1.41081737, 0.00], [0.00, 0.00, -18.58458]])*1e6)
# C9 = Nucleus('C9', 1/2, np.array([[-7.97712849, -0.043130833, 0.00], [-0.04310833, -6.91664501, 0.00], [0.00, 0.00, -13.66601]])*1e6)
# C10 = Nucleus('C10', 1/2, np.array([[-9.01294238, -0.22105705, 0.00], [-0.22105705, -10.25776244, 0.00], [0.00, 0.00, 3.70115]])*1e6) ####
# C4 = Nucleus('C4', 1/2, np.array([[-9.01473609, -0.84701422, 0.00], [-0.84701422, -9.19059253, 0.00], [0.00, 0.00, 1.57954]])*1e6)
# C8M = Nucleus('C8M', 1/2, np.array([[-7.06096989, -0.3739835, 0.00], [-0.3739835, -6.67867194, 0.00], [0.00, 0.00, -7.03779]])*1e6)
# C1prime = Nucleus('C1prime', 1/2, np.array([[-3.61055802, -0.0455604, 0.00], [-0.0455604, -4.78196682, 0.00], [0.00, 0.00, -5.09795]])*1e6) )
# C2 = Nucleus('C2', 1/2, np.array([[-2.28627732, 0.52152737, 0.00], [0.52152737, -1.49717727, 0.00], [0.00, 0.00, 1.65115]])*1e6) )
# C7M = Nucleus('C7M', 1/2, np.array([[1.86995394, 0.17078518, 0.00], [0.17078518, 2.054022, 0.00], [0.00, 0.00, 1.48894]])*1e6)







